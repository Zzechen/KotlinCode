package others

/**
 * 相等：
 * 在Kotlin中，有两种类型相等
 * 1、引用相等（引用同一个对象）
 * 2、结构相等（使用equals()）
 */
/**
 * 引用相等：
 * 使用'==='操作符比较（否定方式为'!=='）
 * 如果'a === b'引用同一对象，则值为true
 */

/**
 * 结构相等：
 * 使用'=='操作符比较（否定方式为'!='）
 * 为了方便，类似于'a == b'的表达式会转换成：
 * a?.equals(b) ?: (b === null)
 * 如果a不为null，会调用equals(Any?)方法，否则检查b是否为null
 * note：在显示和null比较时，a == null，会自动转换成a === null
 */

/**
 * 浮点类型比较：
 * 当明确知道比较的对象为小数（Float，Double）时将使用IEEE 754标准进行比较，
 * 否则，将使用结构相等比较，和标准不同：
 * 1、NaN等于自己
 * 2、-0.0不等于0.0
 */

fun main(args: Array<String>) {
    Float.NaN
}